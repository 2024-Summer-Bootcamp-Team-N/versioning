services:
  backend:
    image: legit0302/be:1.0.60  # 도커 허브에 있는 최신 백엔드 이미지 (태그 수정 하면서 올립니다!)
    container_name: backend
    restart: always
    ports:
      - '8000:8000'
    environment:
      - DJANGO_ENV=production
    networks:
      - app-network

  frontend:
    image: legit0302/fe:1.0.29  # 프론트엔드 이미지 태그 입니다
    container_name: frontend
    restart: always
    ports:
      - "5173:5173"
    command: yarn dev --host
    networks:
      - app-network

  daphne:
    image: legit0302/be:1.0.60  # backend와 동일!!!
    container_name: daphne
    restart: always
    ports:
      - '8001:8001'
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
    command: daphne -b 0.0.0.0 -p 8001 config.asgi:application
    depends_on:
      - redis
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - /home/ec2-user/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
      - daphne
      - prometheus
      - grafana
      - node_exporter
      - redis
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /home/ec2-user/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /home/ec2-user/prometheus/data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - /home/ec2-user/grafana/data:/var/lib/grafana
      - /home/ec2-user/grafana/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - "3000:3000"
    networks:
      - app-network

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
